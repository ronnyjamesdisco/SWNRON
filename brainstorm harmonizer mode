/* if messing with existing chord spread
<params_update.h> 
#define NUM_CHORDS			26

-> should be increased for full harmonizing
*/ 

/* Q: Should we add a new "harmonizer" key mode rather than messing around with the chord spread? 
*
* control structure for harmonizer key mode could go like: 
* - TRANSPOSE_CV -> channels 2-6 params_update through harmonizer tables (CV octaves =inversions)
* - CHORD_CV -> gate
* - TBS: chord spread encoder -> choose from different harmonizer scales (minor, major, guitar, jazzy, ..) 
* 
* steal most parts from existing CV/Gate mode [KEYS_EXT_TRIG]
*
* for reference: current key modes referred by the manual: 
* Mute Mode: ksw_MUTE 
* Note Mode: ksw_NOTE
* Keyboard Mode: ksw_KEYS 
* CV/Gate Mode: ksw_KEYS_EXT_TRIG
*
*/

{/* <params_update.h> */
	enum MuteNoteKeyStates {
		ksw_MUTE,
		ksw_NOTE,
		ksw_KEYS,
		ksw_KEYS_EXT_TRIG,
		
		NUM_MUTE_NOTE_KEY_STATES
	};
};

{ /* <led_cont.c> LED colors for key modes */
	key_sw_mode_colors[ksw_MUTE] = ledc_WHITE;
	key_sw_mode_colors[ksw_NOTE] = ledc_PINK;
	key_sw_mode_colors[ksw_KEYS] = ledc_PURPLE;
	key_sw_mode_colors[ksw_KEYS_EXT_TRIG] = ledc_GOLD;
};	

{ /* <params_update.c> add harmonizer to apply_keymode 
*/
 void apply_keymode(uint8_t chan, enum MuteNoteKeyStates new_keymode)
 
	else if (new_keymode == ksw_HARMONIZER) 
		// find out what to do here, sclm_NONE or MAJOR/M√çNOR etc
	
 };	